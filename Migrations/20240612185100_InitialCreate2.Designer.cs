// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using onion_architeture.Infrastructure.Data;

#nullable disable

namespace onion_architeture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240612185100_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SklepMotorowy.Core.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DrivingLicence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SklepMotorowy.Core.Entities.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("onion_architeture.Core.Entities.ClientAndMotorcycle", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("MotorcycleId")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "MotorcycleId");

                    b.HasIndex("MotorcycleId");

                    b.ToTable("ClientMotorcycles");
                });

            modelBuilder.Entity("onion_architeture.Core.Entities.Insurance", b =>
                {
                    b.Property<int>("InsuranceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceNumber"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceCost")
                        .HasColumnType("int");

                    b.Property<int>("MotorcycleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InsuranceNumber");

                    b.HasIndex("MotorcycleId");

                    b.ToTable("Insurance");
                });

            modelBuilder.Entity("onion_architeture.Core.Entities.ClientAndMotorcycle", b =>
                {
                    b.HasOne("SklepMotorowy.Core.Entities.Client", "Client")
                        .WithMany("ClientAndMotorcycles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SklepMotorowy.Core.Entities.Motorcycle", "Motorcycle")
                        .WithMany("ClientAndMotorcycles")
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Motorcycle");
                });

            modelBuilder.Entity("onion_architeture.Core.Entities.Insurance", b =>
                {
                    b.HasOne("SklepMotorowy.Core.Entities.Motorcycle", "Motorcycle")
                        .WithMany("Insurances")
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorcycle");
                });

            modelBuilder.Entity("SklepMotorowy.Core.Entities.Client", b =>
                {
                    b.Navigation("ClientAndMotorcycles");
                });

            modelBuilder.Entity("SklepMotorowy.Core.Entities.Motorcycle", b =>
                {
                    b.Navigation("ClientAndMotorcycles");

                    b.Navigation("Insurances");
                });
#pragma warning restore 612, 618
        }
    }
}
